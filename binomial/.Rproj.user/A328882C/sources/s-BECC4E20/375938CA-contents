---
title: "workout3"
author: "kejun zhou"
date: "4/19/2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


```{r cars}
library(ggplot2)
#this function is about testing whether the input probability is valid or not. If it is invalid, stop the function and give the error message.
check_prob=function(prob){
  if (prob<=1 & prob>0) return(TRUE)
  else stop("invalid prob value")
}

#this function is about testing whether the trials are valid or not. If it is invalid, stop the function and give the error message
check_trials=function(trials){
  if (trials%%1==0 & trials>=0){
    return (TRUE)
  }
  else stop("invalid trials value")
}

#this function is about testing whether the success are valid or not. If it is invalid which means it is greater than trials or is not integer, stop the function and give the error message
check_success=function(success,trials){
  for (i in (1:length(success))){
    if (success[i]>trials) stop("success cannot be greater than trials")
  }
  if(all(success==as.integer(success))==FALSE) stop("invalid success value")
  else return (TRUE)

}

aux_mean=function(trials,prob){
  return (trials*prob)
}
aux_variance=function(trials,prob){
  return (trials*prob*(1-prob))
}
aux_mode=function(trials,prob){
  a=floor(trials*prob+prob)
 return (a)
}
aux_skewness=function(trials,prob){
  return ((1-2*prob)/(sqrt(trials*prob*(1-prob))))
}
aux_kurtosis=function(trials,prob){
  return ((1-6*prob*(1-prob))/(trials*prob*(1-prob)))
}


bin_choose=function(n,k){
  if (all(k<=n)) return (factorial(n)/(factorial(k)*factorial(n-k)))
  else stop("k cannot be greater than n")
}
bin_choose(n = 5, k = 2)
bin_choose(5, 0)
bin_choose(5, 1:3)


bin_probability=function(success,trials,prob){
  check_trials(trials)
  check_prob(prob)
  check_success(success,trials)
  return ((bin_choose(trials,success))*(prob^success)*(1-prob)^(trials-success))
}

bin_distribution=function(trials,prob){
  p=c()
  for (i in 1:(trials+1)){
    p[i]=bin_probability(i-1,trials,prob)
  }
  s=seq(0,trials)
  dataframe=data.frame(success=s,probability=p)
  class(dataframe)=append("bindis",class(dataframe))
  #dataframe=as.data.frame(dataframe)
  return (dataframe)
}

s=bin_distribution(trials = 5, prob = 0.5)

plot <- function (x) {
   UseMethod("plot", x)
 }

plot.bindis=function(obj){
  ggplot(obj,aes(x=success,y=probability))+
  geom_bar(stat="identity")+labs(title="frequencey")+scale_x_continuous(breaks=seq(0,5,1))
}

dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)


bin_cumulative=function(trials,prob){
  p=c()
  cum=c()
  for (i in 1:(trials+1)){
    p[i]=bin_probability(i-1,trials,prob)
    cum[i]=sum(p)
  }
  s=seq(0,trials)
  dataframe=data.frame(success=s,probability=p,cumulative=cum)
  class(dataframe)=append("bincum",class(dataframe))
  return (dataframe)
}
# binomial cumulative distribution
bin_cumulative(trials = 5, prob = 0.5)


plot.bincum=function(obj){
 ggplot(obj,aes(x=success,y=cumulative))+
  geom_line()+geom_point(shape=1,color="black",fill="white")+labs(title="freq")
  #plot(x=success,y=cumulative,type="l")
}

# plotting binomial cumulative distribution
dis2 <- bin_cumulative(trials = 5, prob = 0.5)
plot(dis2)


bin_variable=function(trials,prob){
  check_prob(prob)
  check_trials(trials)
  value=list(prob=prob,trials=trials)
  class(value)=c("binvar")
  value
}


print<- function (x) {
   UseMethod("print", x)
}
print.binvar=function(x){
  cat(sprintf('"Binomial variable"'),"\n")
  cat('\n')
  cat("Paramaters",'\n')
  cat(" - number of trials:",x$trials,"\n")
  cat(" - prob of success:",x$prob)
  invisible(x)
}
bin1 <- bin_variable(trials = 10, p = 0.3)
bin1

summary<- function (x) {
   UseMethod("summary", x)
}
summary.binvar=function(x){
  obj=list(mean=aux_mean(x$trials,x$prob),variance=aux_variance(x$trials,x$prob),mode=aux_mode(x$trials,x$prob),skewness=aux_skewness(x$trials,x$prob),kurtosis=aux_kurtosis(x$trials,x$prob))
  class(obj)="summary.binvar"
  obj
  #invisible(x)
}
bin1 <- bin_variable(trials = 10, p = 0.3)
binsum1 <- summary(bin1)

# print.summary<- function (x) {
#    UseMethod("print.summary", x)
# }
print.summary.binvar=function(x){
  cat(sprintf('"Summary Binomial"'),"\n","\n")
  cat("Paramaters",'\n')
  cat("- number of trials:",x$trials,"\n")
  cat("- prob of success:",x$prob,'\n','\n')
  cat("Measures",'\n')
  cat("- mean:",x$mean,'\n')
  cat("- variance:",x$variance,'\n')
  cat("- mode:",x$mode,'\n')
  cat("- skewness:",x$skewness,'\n')
  cat("- kurtosis:",x$kurtosis)
  invisible(x)
}
bin1 <- bin_variable(trials = 10, p = 0.3)
binsum1 <- summary(bin1)
binsum1


bin_mean=function(trials,prob){
  check_trials(trials)
  check_prob(prob)
  aux_mean(trials,prob)
}
bin_variance=function(trials,prob){
  check_trials(trials)
  check_prob(prob)
  aux_variance(trials,prob)
}
bin_mode=function(trials,prob){
  check_trials(trials)
  check_prob(prob)
  aux_mode(trials,prob)
}
bin_skewness=function(trials,prob){
  check_trials(trials)
  check_prob(prob)
  aux_skewness(trials,prob)
}
bin_kurtosis=function(trials,prob){
  check_trials(trials)
  check_prob(prob)
  aux_kurtosis(trials,prob)
}
bin_mean(10, 0.3)
bin_variance(10, 0.3)
bin_mode(10, 0.3)
bin_skewness(10, 0.3)
bin_kurtosis(10, 0.3)


```



